// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  telegramId BigInt    @unique
  firstName  String
  username   String?
  email      String?   @unique
  isAdmin    Boolean   @default(false)
  isActive   Boolean   @default(false)
  File       File[]
  Token      Token?
  Password   Password?

  @@map("users")
}

model Token {
  id     Int    @id @default(autoincrement())
  token  String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique

  @@map("tokens")
}

model Password {
  id        Int      @id @default(autoincrement())
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique

  @@map("passwords")
}

model File {
  id          Int       @id @default(autoincrement())
  uuid        String    @unique @default(uuid())
  name        String
  description String
  path        String    @unique
  size        Int
  format      String
  uploadedAt  DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  images      Image[]

  @@map("files")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  files File[]

  @@map("categories")
}

model Image {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique @default(uuid())
  path       String   @unique
  isPrimary  Boolean  @default(false)
  uploadedAt DateTime @default(now())
  file       File?    @relation(fields: [fileId], references: [id])
  fileId     Int?

  @@map("images")
}

model Setting {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String

  @@map("settings")
}
